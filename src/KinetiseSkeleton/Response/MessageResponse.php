<?php

namespace KinetiseSkeleton\Response;

use Symfony\Component\HttpFoundation\Response;

class MessageResponse extends Response
{
    public function __construct($message = null, array $expiredUrls = array(), $status = 200, $headers = array())
    {
        parent::__construct(
            $this->getXml($message, $expiredUrls)->saveXML(),
            $status,
            $headers
        ); // TODO: Change the autogenerated stub
    }

    /**
     * @param null $message
     * @param array $expiredUrls
     *
     * @return \DOMDocument
     */
    private function getXml($message = null, array $expiredUrls = array())
    {
        $dom = new \DOMDocument('1.0', 'UTF-8');

        $responseNode = $dom->createElement('response');
        $dom->appendChild($responseNode);

        if ($message) {
            $messageNode = $dom->createElement('message');
            $responseNode->appendChild($messageNode);

            $valueNode = $dom->createElement('value');
            $valueNode->appendChild($dom->createCDATASection($message));
            $messageNode->appendChild($valueNode);
        }

        if (count($expiredUrls) > 0) {
            $expiredUrlsNode = $dom->createElement('expiredUrl');
            $responseNode->appendChild($expiredUrlsNode);

            foreach ($expiredUrls as $u) {
                $urlNode = $dom->createElement('url');
                $urlNode->appendChild($dom->createCDATASection($u));
                $expiredUrlsNode->appendChild($urlNode);
            }
        }

        return $dom;
    }
}